require(DS705data)
require
data(AnkleMovement)
Backup<-data.frame(Backup)
BackUp<-data.frame(BackUp)
data("BackUp")
BackUp<-data.frame(BackUp)
# Create Boxplots and Histograms for sample differences
ggplot(perception_diff) + geom_boxplot() #+ labs(x = "")
# Create Boxplots and Histograms for sample differences
require(ggplot2)
ggplot(perception_diff) + geom_boxplot() #+ labs(x = "")
# Load the data AnkleMovement
require(DS705data)
data("AnkleMovement")
# Create variable of difference in perception.
perception_diff <- AnkleMovement$tape - AnkleMovement$spat
# Create Boxplots and Histograms for sample differences
require(ggplot2)
ggplot(perception_diff) + geom_boxplot() #+ labs(x = "")
ggplot(perception_diff) +
geom_histogram(binwidth=10, colour="black", fill="white") #+
AnkleMovement <- cbind(AnkleMovement,perception_diff)
View(AnkleMovement)
# Create Boxplots and Histograms for sample differences
ggplot(data = AnkleMovement, aes(x = perception_diff)) + geom_boxplot() + labs(x = "Perceived Difference")
# Create Boxplots and Histograms for sample differences
ggplot(data = AnkleMovement, aes(y = perception_diff)) + geom_boxplot() + labs(x = "Perceived Difference")
boxplot(perception_diff)
# Create Boxplots and Histograms for sample differences
ggplot(data = data.frame(perception_diff)) + geom_boxplot() + labs(x = "Perceived Difference")
# Create Boxplots and Histograms for sample differences
boxplot(perception_diff)
hist(perception_diff)
# Load the data AnkleMovement
require(DS705data)
data("AnkleMovement")
# Create variable of difference in perception.
perception_diff <- AnkleMovement$tape - AnkleMovement$spat
# Create Boxplots and Histograms for sample differences
# https://www.r-bloggers.com/make-a-box-plot-with-single-column-data-using-ggplot2-tutorial/
boxplot(perception_diff)
hist(perception_diff)
# Load the data AnkleMovement
require(DS705data)
data("AnkleMovement")
# Create variable of difference in perception.
perception_diff <- AnkleMovement$tape - AnkleMovement$spat
# Create Boxplots and Histograms for sample differences
# https://www.r-bloggers.com/make-a-box-plot-with-single-column-data-using-ggplot2-tutorial/
boxplot(perception_diff)
# Create Boxplots and Histograms for sample differences
# https://www.r-bloggers.com/make-a-box-plot-with-single-column-data-using-ggplot2-tutorial/
boxplot(perception_diff, ylab = "Difference", main = "Tape minus Spat")
hist(perception_diff)
hist(perception_diff, xlab = "Difference", main = "Tape minus Spat")
# Load the data AnkleMovement
require(DS705data)
data("AnkleMovement")
# Create variable of difference in perception.
perception_diff <- AnkleMovement$tape - AnkleMovement$spat
# Create Boxplots and Histograms for sample differences
# https://www.r-bloggers.com/make-a-box-plot-with-single-column-data-using-ggplot2-tutorial/
boxplot(perception_diff, ylab = "Difference", main = "Tape minus Spat")
bins <- seq(-2.5,2.5,by=.5)
hist(perception_diff, xlab = "Difference", main = "Tape minus Spat")
hist(perception_diff, xlab = "Difference", main = "Tape minus Spat", breaks = bins)
bins <- seq(-2.5,2.5,by=1)
hist(perception_diff, xlab = "Difference", main = "Tape minus Spat", breaks = bins)
bins <- seq(-3.5,3.5,by=1)
hist(perception_diff, xlab = "Difference", main = "Tape minus Spat", breaks = bins)
#
t.test(AnkleMovement$tape, AnkleMovement$spat, alternative = "greater", paired = TRUE)
#
t.test(AnkleMovement$tape, AnkleMovement$spat, alternative = "greater", paired = TRUE, conf.level = .1)
# Create Boxplots and Histograms for sample differences
# https://www.r-bloggers.com/make-a-box-plot-with-single-column-data-using-ggplot2-tutorial/
boxplot(perception_diff, ylab = "Difference", main = "Tape minus Spat")
# Insert your R code here.
wilcox.test(AnkleMovement$tape, AnkleMovement$spat, alternative = "greater", paired = TRUE, conf.level = .1)
# Insert your R code here.
wilcox.test(AnkleMovement$tape, AnkleMovement$spat, alternative = "greater", paired = TRUE, conf.level = .90)
# Insert your R code here.
wilcox.test(AnkleMovement$tape, AnkleMovement$spat, alternative = "greater", paired = TRUE, conf.level = .90)$conf.int
#
t.test(AnkleMovement$tape, AnkleMovement$spat, alternative = "greater", paired = TRUE, conf.level = .90)
# Insert your R code here.
signmedian.test(perception_diff, mu=0, alternative="greater")
# Insert your R code here.
library(signmedian.test)
signmedian.test(perception_diff, mu=0, alternative="greater")
signmedian.test(perception_diff, mu=0, alternative="greater", conf.level = .9)
# Load the data AnkleMovement
require(DS705data)
data("AnkleMovement")
# Create variable of difference in perception.
perception_diff <- AnkleMovement$tape - AnkleMovement$spat
# Create Boxplots and Histograms for sample differences
# https://www.r-bloggers.com/make-a-box-plot-with-single-column-data-using-ggplot2-tutorial/
boxplot(perception_diff, ylab = "Difference", main = "Tape minus Spat")
bins <- seq(-3.5,3.5,by=1)
hist(perception_diff, xlab = "Difference", main = "Tape minus Spat", breaks = bins)
library(boot)
bootMean <- function(x, i) {
# x is a numeric vector
# i is a vector of indices for the resampled elements of x
mean(x[i])
}
set.seed(NULL)
boot.object <- boot(perception_diff, bootMean, R=5000)
boot.ci(boot.object, conf = .9)
# Load the data.
data("SmallAuto")
View(SmallAuto)
library(boot)
bootMean <- function(x, i) {
# x is a numeric vector
# i is a vector of indices for the resampled elements of x
mean(x[i])
}
set.seed(NULL)
boot.object <- boot(perception_diff, bootMean, R=5000)
boot.ci(boot.object, conf = .9, type = "bca")$bca[4:5]
# Load the data.
data("SmallAuto")
View(SmallAuto)
# Load the data.
data("AutoIns")
View(AutoIns)
View(SmallAuto)
View(SmallAuto)
# Insert your R code here.
ggplot(data = SmallAuto, aes(x = Category, y = Claim)) + geom_boxplot() + labs(x = "")
# Insert your R code here.
library(ggplot2)
ggplot(data = SmallAuto, aes(x = Category, y = Claim)) + geom_boxplot() + labs(x = "")
ggplot(SmallAuto, aes(x=Claim)) +
geom_histogram(binwidth=10, colour="black", fill="white") +
facet_grid(. ~ Category)
ggplot(SmallAuto, aes(x=Claim)) +
geom_histogram(binwidth=100, colour="black", fill="white") +
facet_grid(. ~ Category)
ggplot(SmallAuto, aes(x=Claim)) +
geom_histogram(binwidth=500, colour="black", fill="white") +
facet_grid(. ~ Category)
ggplot(SmallAuto, aes(x=Claim)) +
geom_histogram(binwidth=100, colour="black", fill="white") +
facet_grid(. ~ Category)
ggplot(SmallAuto, aes(x=Claim)) +
geom_histogram(binwidth=300, colour="black", fill="white") +
facet_grid(. ~ Category)
ggplot(SmallAuto, aes(x=Claim)) +
geom_histogram(binwidth=250, colour="black", fill="white") +
facet_grid(. ~ Category)
ggplot(data = SmallAuto, aes(x = Category, y = Claim)) + geom_boxplot() + labs(x = "")
small_auto_est_act_diff <- SmallAuto[1:125,]$Claim - SmallAuto[126:250,]$Claim
small_auto_est_act_diff
male <- data.frame(perception_diff) # data from page 66
ggplot(data = male, aes(x = "", y = male)) +
geom_boxplot() +
coord_cartesian(ylim = c(0, 150)) # I set the y axis scale so the plot looks better.
View(male)
ggplot(data = male, aes(x = "", y = perception_diff)) +
geom_boxplot() +
coord_cartesian(ylim = c(0, 150)) # I set the y axis scale so the plot looks better.
ggplot(data = male, aes(x = "", y = perception_diff)) +
geom_boxplot() +
coord_cartesian(ylim = c(0, 150)) # I set the y axis scale so the plot looks better.
ggplot(data = male, aes(x = "", y = perception_diff)) +
geom_boxplot() #+
ggplot(data = perception_diff_df, aes(x = "", y = perception_diff)) +
geom_boxplot() + labs(x="", y="Perception Diff")#+
perception_diff_df <- data.frame(perception_diff) # data from page 66
ggplot(data = perception_diff_df, aes(x = "", y = perception_diff)) +
geom_boxplot() + labs(x="", y="Perception Diff")#+
ggplot(data = perception_diff_df, aes(x = "", y = perception_diff)) +
geom_boxplot() + labs(x="", y="Perception Diff") + ggtitle("Taped Minus Spatted Ankle")#+
ggplot(data = perception_diff_df, aes(x = "", y = perception_diff)) +
geom_boxplot() + labs(x="", y="Perception Diff") + ggtitle("Taped Minus Spatted Ankle")#+
+ theme(plot.title = element_text(hjust = 0.5))
ggplot(data = perception_diff_df, aes(x = "", y = perception_diff)) +
geom_boxplot() + labs(x="", y="Perception Diff") + ggtitle("Taped Minus Spatted Ankle") +
theme(plot.title = element_text(hjust = 0.5))
hist(perception_diff, xlab = "Difference", main = "Tape minus Spat", breaks = bins)
#ggplot(data = WormSheep, aes(x = treated, y = worms)) + geom_boxplot() + labs(x = "")
ggplot(perception_diff_df, aes(x=perception_diff)) +
geom_histogram(binwidth=10, colour="black", fill="white") #+
#ggplot(data = WormSheep, aes(x = treated, y = worms)) + geom_boxplot() + labs(x = "")
ggplot(perception_diff_df, aes(x=perception_diff)) +
geom_histogram(binwidth=1, colour="black", fill="white") #+
#ggplot(data = WormSheep, aes(x = treated, y = worms)) + geom_boxplot() + labs(x = "")
ggplot(perception_diff_df, aes(x=perception_diff)) +
geom_histogram(binwidth=.5, colour="black", fill="white") #+
#ggplot(data = WormSheep, aes(x = treated, y = worms)) + geom_boxplot() + labs(x = "")
ggplot(perception_diff_df, aes(x=perception_diff)) +
geom_histogram(binwidth=1, colour="black", fill="white") #+
#ggplot(data = WormSheep, aes(x = treated, y = worms)) + geom_boxplot() + labs(x = "")
ggplot(perception_diff_df, aes(x=perception_diff)) +
geom_histogram(binwidth=1, colour="black", fill="white") + labs(x = "Perception Diff") +
ggtitle("Taped Minus Spatted Ankle")
#ggplot(data = WormSheep, aes(x = treated, y = worms)) + geom_boxplot() + labs(x = "")
ggplot(perception_diff_df, aes(x=perception_diff)) +
geom_histogram(binwidth=1, colour="black", fill="white") + labs(x = "Perception Diff") +
ggtitle("Taped Minus Spatted Ankle") +
theme(plot.title = element_text(hjust = 0.5))
small_auto_est_act_diff_df <- data.frame(small_auto_est_act_diff)
ggplot(data = small_auto_est_act_diff_df, aes(x = "", y = small_auto_est_act_diff)) +
geom_boxplot() + labs(x="", y="Estimated vs Actual Diff") + ggtitle("Estimated Minus Actual Claim") +
theme(plot.title = element_text(hjust = 0.5))
#ggplot(data = WormSheep, aes(x = treated, y = worms)) + geom_boxplot() + labs(x = "")
ggplot(small_auto_est_act_diff_df, aes(x=small_auto_est_act_diff)) +
geom_histogram(binwidth=10, colour="black", fill="white") + labs(x = "Estimated vs Actual Diff") +
ggtitle("Estimated Minus Actual Claim") +
theme(plot.title = element_text(hjust = 0.5))
small_auto_est_act_diff_df <- data.frame(small_auto_est_act_diff)
ggplot(data = small_auto_est_act_diff_df, aes(x = "", y = small_auto_est_act_diff)) +
geom_boxplot() + labs(x="", y="Estimated vs Actual Diff") + ggtitle("Estimated Minus Actual Claims") +
theme(plot.title = element_text(hjust = 0.5))
#ggplot(data = WormSheep, aes(x = treated, y = worms)) + geom_boxplot() + labs(x = "")
ggplot(small_auto_est_act_diff_df, aes(x=small_auto_est_act_diff)) +
geom_histogram(binwidth=10, colour="black", fill="white") + labs(x = "Estimated Minus Actual Claims") #+
shapiro.test(small_auto_est_act_diff)
qqnorm(small_auto_est_act_diff, ylab="Estimated Minus Actual")
qqline(small_auto_est_act_diff)
# Make normal probability plot of Estimated minus Actual and add fit line.
{
qqnorm(small_auto_est_act_diff, ylab="Estimated Minus Actual")
qqline(small_auto_est_act_diff)
}
shapiro.test(small_auto_est_act_diff)
small_auto_est_act_diff_df <- data.frame(small_auto_est_act_diff)
ggplot(data = small_auto_est_act_diff_df, aes(x = "", y = small_auto_est_act_diff)) +
geom_boxplot() + labs(x="", y="Estimated vs Actual Diff") + ggtitle("Estimated Minus Actual Claims") +
theme(plot.title = element_text(hjust = 0.5))
#ggplot(data = WormSheep, aes(x = treated, y = worms)) + geom_boxplot() + labs(x = "")
ggplot(small_auto_est_act_diff_df, aes(x=small_auto_est_act_diff)) +
geom_histogram(binwidth=10, colour="black", fill="white") + labs(x = "Estimated Minus Actual Claims") #+
estimated_claims <- SmallAuto[1:125,]$Claim
actual_claims <- SmallAuto[126:250,]$Claim
estimated_claims <- SmallAuto[1:125,]$Claim
actual_claims <- SmallAuto[126:250,]$Claim
small_auto_est_act_diff <- estimated_claims - actual_claims
t.test(estimated_claims, actual_claims, alternative = "less", paired = TRUE, conf.level = .95)
mean(estimated_claims)
mean(actual_claims)
